kind: pipeline
type: docker
name: game

steps:
  - name: build-go # 流水线名称
    image: golang:1.24.1 # 定义创建容器的Docker镜像
    volumes: # 将容器内目录挂载到宿主机，仓库需要开启Trusted设置
      - name: go-cache
        path: /go/pkg/mod # 将go下载依赖的目录挂载出来，防止重复下载
      - name: go-build
        path: /app/build # 将应用打包好的可执行文件挂载出来
    commands: # 定义在Docker容器中执行的shell命令
      - go mod tidy # 整理依赖
      - CGO_ENABLED=0 GOOS=linux go build -o /app/build/game . # 应用打包命令
      - cp Dockerfile /app/build/
      - cp run.sh /app/build/
  - name: build-docker # 流水线名称
    image: plugins/docker
    volumes: # 将容器内目录挂载到宿主机，仓库需要开启Trusted设置
      - name: go-build
        path: /app/build # 将应用打包好的可执行文件挂载出来
      - name: docker
        path: E:/workspace/src/gin-docker-test/docker.sock # 挂载宿主机的docker
    settings:
      dockerfile: /app/build/Dockerfile
    commands: # 定义在Docker容器中执行的shell命令
      - cd /app/build
      - chmod +x run.sh
      - sh run.sh
      - docker ps
volumes: # 定义流水线挂载目录，用于共享数据
  - name: go-build
    host:
      path: /home/docker/drone/go/build # 从宿主机中挂载的目录
  - name: go-cache
    host:
      path: /home/docker/drone/go/cache
  - name: docker
    host:
      path: /var/run/docker.sock